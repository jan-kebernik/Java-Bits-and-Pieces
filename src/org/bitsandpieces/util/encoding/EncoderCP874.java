/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bitsandpieces.util.encoding;

/**
 *
 * @author pp
 */
final class EncoderCP874 extends SingleByteEncoder implements Encoder {

	// collision-free hash table for CP874 char-to-byte conversion.
	// unless entry == INVALID_ID, highest 16 bits are used 
	// to verify key match, lowest byte is mapped byte.
	// only maps entries for keys >= 128 (non-ASCII range).
	private static final int[] TABLE = {
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x20130096, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x20140097, INVALID_ID,
		INVALID_ID, INVALID_ID, 0x20190092, 0x20180091, INVALID_ID, INVALID_ID, 0x201d0094, 0x201c0093,
		INVALID_ID, INVALID_ID, 0x20260085, INVALID_ID, INVALID_ID, INVALID_ID, 0x20220095, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		0x0e4900e9, 0x0e4800e8, 0x0e4b00eb, 0x0e4a00ea, 0x0e4d00ed, 0x0e4c00ec, 0x0e4f00ef, 0x0e4e00ee,
		0x0e4000e0, 0x0e4100e1, 0x0e4200e2, 0x0e4300e3, 0x0e4400e4, 0x0e4500e5, 0x0e4600e6, 0x0e4700e7,
		0x0e5b00fb, 0x0e5a00fa, 0x0e5900f9, 0x0e5800f8, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		0x0e5200f2, 0x0e5300f3, 0x0e5000f0, 0x0e5100f1, 0x0e5600f6, 0x0e5700f7, 0x0e5400f4, 0x0e5500f5,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x00a000a0, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x20ac0080, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x0e0100a1, 0x0e0200a2, 0x0e0300a3, 0x0e0400a4, 0x0e0500a5, 0x0e0600a6, 0x0e0700a7,
		0x0e0900a9, 0x0e0800a8, 0x0e0b00ab, 0x0e0a00aa, 0x0e0d00ad, 0x0e0c00ac, 0x0e0f00af, 0x0e0e00ae,
		0x0e1200b2, 0x0e1300b3, 0x0e1000b0, 0x0e1100b1, 0x0e1600b6, 0x0e1700b7, 0x0e1400b4, 0x0e1500b5,
		0x0e1b00bb, 0x0e1a00ba, 0x0e1900b9, 0x0e1800b8, 0x0e1f00bf, 0x0e1e00be, 0x0e1d00bd, 0x0e1c00bc,
		0x0e2400c4, 0x0e2500c5, 0x0e2600c6, 0x0e2700c7, 0x0e2000c0, 0x0e2100c1, 0x0e2200c2, 0x0e2300c3,
		0x0e2d00cd, 0x0e2c00cc, 0x0e2f00cf, 0x0e2e00ce, 0x0e2900c9, 0x0e2800c8, 0x0e2b00cb, 0x0e2a00ca,
		0x0e3600d6, 0x0e3700d7, 0x0e3400d4, 0x0e3500d5, 0x0e3200d2, 0x0e3300d3, 0x0e3000d0, 0x0e3100d1,
		0x0e3f00df, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x0e3a00da, 0x0e3900d9, 0x0e3800d8
	};

	@Override
	int convert(int i) {
		return TABLE[(((i >>> 3) ^ i)) & 0xff];
	}

	@Override
	public Encoding encoding() {
		return Encoding.CP874;
	}
}
