/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bitsandpieces.util.encoding;

/**
 *
 * @author pp
 */
final class EncoderCP1250 extends SingleByteEncoder implements Encoder {

	// collision-free hash table for CP1250 char-to-byte conversion.
	// unless entry == INVALID_ID, highest 16 bits are used 
	// to verify key match, lowest byte is mapped byte.
	// only maps entries for keys >= 128 (non-ASCII range).
	private static final int[] TABLE = {
		0x02c700a1, INVALID_ID, INVALID_ID, 0x013900c5, INVALID_ID, INVALID_ID, 0x00ab00ab, INVALID_ID,
		0x00e400e4, 0x0164008d, INVALID_ID, INVALID_ID, 0x00d600d6, INVALID_ID, INVALID_ID, 0x010f00ef,
		INVALID_ID, 0x014800f2, INVALID_ID, INVALID_ID, INVALID_ID, 0x013a00e5, 0x00f300f3, INVALID_ID,
		0x00ac00ac, 0x201c0093, INVALID_ID, 0x0165009d, INVALID_ID, INVALID_ID, 0x00d700d7, INVALID_ID,
		INVALID_ID, 0x011000d0, 0x00c900c9, 0x2039008b, INVALID_ID, 0x010200c3, 0x00bb00bb, INVALID_ID,
		0x00f400f4, INVALID_ID, 0x00ad00ad, 0x201d0094, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x015800d8, 0x02d800a2, 0x011100f0, INVALID_ID, 0x203a009b, INVALID_ID, 0x010300e3,
		INVALID_ID, 0x20ac0080, INVALID_ID, INVALID_ID, 0x00ae00ae, 0x201e0084, 0x00e700e7, INVALID_ID,
		0x00a000a0, INVALID_ID, INVALID_ID, 0x015900f8, 0x02d900ff, INVALID_ID, 0x00cb00cb, INVALID_ID,
		INVALID_ID, 0x010400a5, INVALID_ID, 0x013d00bc, 0x00f600f6, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x00da00da, 0x015a008c, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x010500b9, INVALID_ID, 0x013e00be, 0x00f700f7, INVALID_ID,
		0x00b000b0, 0x20200086, 0x00e900e9, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x015b009c,
		0x02db00b2, INVALID_ID, 0x00cd00cd, INVALID_ID, INVALID_ID, 0x010600c6, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, 0x00b100b1, 0x20210087, INVALID_ID, INVALID_ID, INVALID_ID, 0x20130096,
		0x00dc00dc, INVALID_ID, INVALID_ID, INVALID_ID, 0x00ce00ce, INVALID_ID, INVALID_ID, 0x010700e6,
		INVALID_ID, 0x20300089, INVALID_ID, 0x0179008f, 0x21220099, 0x20220095, 0x00eb00eb, INVALID_ID,
		0x00a400a4, 0x20140097, 0x00dd00dd, INVALID_ID, 0x02dd00bd, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, 0x00c100c1, 0x014100a3, 0x00fa00fa, 0x017a009f, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x015e00aa, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x015000d5, INVALID_ID, INVALID_ID, 0x00c200c2, 0x014200b3, INVALID_ID, 0x017b00af,
		0x00b400b4, INVALID_ID, 0x00ed00ed, INVALID_ID, 0x00a600a6, INVALID_ID, 0x00df00df, 0x015f00ba,
		INVALID_ID, 0x011800ca, INVALID_ID, 0x015100f5, INVALID_ID, INVALID_ID, INVALID_ID, 0x014300d1,
		0x00fc00fc, 0x017c00bf, 0x00b500b5, INVALID_ID, 0x00ee00ee, 0x016e00d9, 0x00a700a7, INVALID_ID,
		INVALID_ID, 0x0160008a, INVALID_ID, 0x011900ea, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		0x00c400c4, 0x014400f1, 0x00fd00fd, 0x017d008e, 0x00b600b6, 0x20260085, INVALID_ID, 0x016f00f9,
		0x00a800a8, 0x20180091, 0x00e100e1, 0x0161009a, INVALID_ID, 0x011a00cc, 0x00d300d3, INVALID_ID,
		INVALID_ID, 0x010c00c8, INVALID_ID, INVALID_ID, INVALID_ID, 0x017e009e, 0x00b700b7, INVALID_ID,
		INVALID_ID, 0x017000db, 0x00a900a9, 0x20190092, 0x00e200e2, 0x016200de, INVALID_ID, 0x011b00ec,
		0x00d400d4, 0x015400c0, INVALID_ID, 0x010d00e8, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		0x00b800b8, INVALID_ID, INVALID_ID, 0x017100fb, INVALID_ID, 0x201a0082, INVALID_ID, 0x016300fe,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x015500e0, INVALID_ID, 0x010e00cf, 0x00c700c7, 0x014700d2
	};

	@Override
	int convert(int c) {
		return TABLE[(((c * 4609) >>> 8) ^ (c >>> 13)) & 0xff];
	}

	@Override
	public Encoding encoding() {
		return Encoding.CP1250;
	}
}
