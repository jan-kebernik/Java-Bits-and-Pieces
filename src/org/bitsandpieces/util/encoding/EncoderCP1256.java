/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bitsandpieces.util.encoding;

/**
 *
 * @author pp
 */
final class EncoderCP1256 extends SingleByteEncoder implements Encoder {

	// collision-free hash table for CP1256 char-to-byte conversion.
	// unless entry == INVALID_ID, highest 16 bits are used 
	// to verify key match, lowest byte is mapped byte.
	// only maps entries for keys >= 128 (non-ASCII range).
	private static final int[] TABLE = {
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x00d700d7, INVALID_ID, 0x21220099, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x0698008e, INVALID_ID,
		INVALID_ID, 0x00e000e0, 0x06af0090, 0x00e200e2, INVALID_ID, 0x06a90098, INVALID_ID, INVALID_ID,
		0x00e800e8, 0x00e700e7, 0x00e900e9, INVALID_ID, 0x00eb00eb, 0x00ea00ea, INVALID_ID, INVALID_ID,
		0x00ee00ee, 0x06ba009f, INVALID_ID, 0x00ef00ef, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x00f400f4, INVALID_ID, INVALID_ID, INVALID_ID, 0x00f700f7, INVALID_ID, 0x00f900f9,
		0x00fb00fb, INVALID_ID, INVALID_ID, 0x00fc00fc, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		0x06c100c0, INVALID_ID, INVALID_ID, INVALID_ID, 0x06be00aa, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x20180091, 0x20190092, 0x201a0082, 0x06d200ff, INVALID_ID, 0x201c0093, 0x201d0094,
		0x201e0084, INVALID_ID, 0x20200086, INVALID_ID, 0x20210087, 0x20220095, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, 0x20260085, INVALID_ID, INVALID_ID, 0x060c00a1, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x02c60088, INVALID_ID, INVALID_ID, 0x20300089, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x061b00ba,
		INVALID_ID, 0x2039008b, 0x203a009b, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		0x062900c9, 0x062a00ca, INVALID_ID, 0x062b00cb, 0x062600c6, INVALID_ID, 0x062700c7, 0x062800c8,
		0x062200c2, 0x062300c3, 0x062400c4, 0x062500c5, 0x061f00bf, INVALID_ID, 0x062100c1, INVALID_ID,
		0x063600d6, 0x063700d8, 0x063800d9, INVALID_ID, 0x063300d3, 0x063400d4, INVALID_ID, 0x063500d5,
		INVALID_ID, 0x063000d0, 0x063100d1, 0x063200d2, 0x062c00cc, 0x062d00cd, 0x062e00ce, 0x062f00cf,
		0x064300df, 0x064400e1, 0x064500e3, 0x064600e4, 0x064000dc, 0x064100dd, 0x064200de, INVALID_ID,
		0x0152008c, 0x0153009c, INVALID_ID, INVALID_ID, 0x063900da, 0x063a00db, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x065100f8, 0x065200fa, INVALID_ID, 0x064d00f2, 0x064e00f3, 0x064f00f5, 0x065000f6,
		0x064a00ed, 0x064b00f0, INVALID_ID, 0x064c00f1, INVALID_ID, 0x064700e5, 0x064800e6, 0x064900ec,
		INVALID_ID, INVALID_ID, 0x200c009d, 0x200d009e, INVALID_ID, 0x200e00fd, 0x200f00fe, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x20130096, 0x20140097, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x00a000a0, INVALID_ID, 0x00a200a2, 0x00a400a4, 0x00a300a3,
		0x00a600a6, 0x00a500a5, INVALID_ID, 0x00a700a7, 0x00a900a9, 0x00a800a8, 0x00ab00ab, INVALID_ID,
		0x00ac00ac, 0x0679008a, 0x00ae00ae, 0x00ad00ad, 0x00b000b0, 0x00af00af, 0x00b100b1, INVALID_ID,
		0x00b300b3, 0x00b200b2, 0x00b500b5, 0x00b400b4, 0x00b600b6, INVALID_ID, 0x00b800b8, 0x00b700b7,
		0x0686008d, 0x00b900b9, 0x00bb00bb, INVALID_ID, 0x00bd00bd, 0x00bc00bc, INVALID_ID, 0x00be00be,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x01920083, INVALID_ID, INVALID_ID, INVALID_ID, 0x067e0081,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x20ac0080, INVALID_ID, INVALID_ID, 0x0691009a,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x0688008f, INVALID_ID, INVALID_ID

	};

	@Override
	int convert(int c) {
		return TABLE[(((c * 2489) >>> 11) ^ (c >>> 7)) & 0xff];
	}

	@Override
	public Encoding encoding() {
		return Encoding.CP1256;
	}
}
