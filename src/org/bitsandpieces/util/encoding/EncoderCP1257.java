/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bitsandpieces.util.encoding;

/**
 *
 * @author pp
 */
final class EncoderCP1257 extends SingleByteEncoder implements Encoder {

	// collision-free hash table for CP1257 char-to-byte conversion.
	// unless entry == INVALID_ID, highest 16 bits are used 
	// to verify key match, lowest byte is mapped byte.
	// only maps entries for keys >= 128 (non-ASCII range).
	private static final int[] TABLE = {
		0x010000c2, INVALID_ID, 0x011600cb, 0x00f500f5, 0x20210087, 0x013700ed, INVALID_ID, 0x00c900c9,
		INVALID_ID, 0x00b300b3, INVALID_ID, 0x014d00f4, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		0x00b000b0, 0x00bb00bb, 0x20130096, 0x014500d2, 0x00dc00dc, 0x201e0084, INVALID_ID, 0x017900ca,
		0x00a8008d, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		0x016000d0, 0x016b00fb, INVALID_ID, INVALID_ID, INVALID_ID, 0x00d700d7, INVALID_ID, INVALID_ID,
		0x00b8008f, INVALID_ID, INVALID_ID, 0x00ad00ad, 0x20190092, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x015b00fa, 0x010600c3, INVALID_ID, 0x013c00ef, INVALID_ID, INVALID_ID, 0x011900e6,
		INVALID_ID, INVALID_ID, 0x017e00fe, INVALID_ID, 0x00c400c4, 0x00df00df, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, 0x00d600d6, INVALID_ID, INVALID_ID, 0x00f700f7, 0x012a00ce, INVALID_ID,
		INVALID_ID, 0x017300f8, 0x00ae00ae, 0x20140097, INVALID_ID, INVALID_ID, INVALID_ID, 0x00b100b1,
		INVALID_ID, 0x017b00dd, 0x00a600a6, 0x201c0093, INVALID_ID, INVALID_ID, 0x015a00da, 0x00b900b9,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x00e400e4, INVALID_ID, 0x012200cc, 0x010100e2,
		0x00a000a0, 0x00ab00ab, 0x00b600b6, INVALID_ID, 0x010c00c8, 0x011700eb, INVALID_ID, 0x00e900e9,
		INVALID_ID, 0x203a009b, INVALID_ID, INVALID_ID, INVALID_ID, 0x012f00e1, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, 0x00c600af, INVALID_ID, 0x00fc00fc, INVALID_ID, INVALID_ID, 0x02d900ff,
		INVALID_ID, 0x00a300a3, 0x00be00be, INVALID_ID, 0x010400c0, INVALID_ID, 0x014200f9, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x20ac0080, 0x00ac00ac, 0x00b700b7, 0x016a00db, INVALID_ID,
		0x00d800a8, 0x201a0082, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x011200c7, INVALID_ID,
		INVALID_ID, 0x013b00cf, 0x00e600bf, 0x00c500c5, INVALID_ID, 0x010700e3, INVALID_ID, 0x20300089,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x017d00de, 0x00a400a4, INVALID_ID, INVALID_ID, 0x014100d9,
		INVALID_ID, 0x20220095, 0x00f600f6, INVALID_ID, 0x014c00d4, 0x015700ba, 0x21220099, 0x00a900a9,
		INVALID_ID, 0x00d300d3, INVALID_ID, INVALID_ID, 0x00b400b4, INVALID_ID, 0x017200d8, INVALID_ID,
		0x201d0094, 0x02db009e, INVALID_ID, INVALID_ID, 0x00bc00bc, INVALID_ID, 0x017a00ea, INVALID_ID,
		INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x014400f1, INVALID_ID, INVALID_ID, INVALID_ID,
		INVALID_ID, INVALID_ID, 0x015600aa, 0x00b500b5, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID,
		0x011800c6, 0x00f300f3, 0x012e00c1, 0x010d00e8, 0x2039008b, INVALID_ID, INVALID_ID, 0x20180091,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x010500e0, INVALID_ID, 0x02c7008e, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x014300d1, INVALID_ID, 0x00bd00bd, INVALID_ID, 0x20260085, 0x00a200a2, INVALID_ID,
		INVALID_ID, 0x012b00ee, 0x013600cd, 0x00d500d5, INVALID_ID, INVALID_ID, INVALID_ID, 0x20200086,
		0x00f800b8, 0x011300e7, INVALID_ID, INVALID_ID, INVALID_ID, 0x00af009d, 0x00b200b2, INVALID_ID,
		INVALID_ID, INVALID_ID, 0x014600f2, 0x00e500e5, 0x017c00fd, 0x00a700a7, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x012300ec, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x016100f0
	};

	@Override
	int convert(int c) {
		return TABLE[(((c * 3080223) >>> 15) ^ c) & 0xff];
	}

	@Override
	public Encoding encoding() {
		return Encoding.CP1257;
	}
}
