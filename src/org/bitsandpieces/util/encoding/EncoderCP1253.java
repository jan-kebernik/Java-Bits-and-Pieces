/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bitsandpieces.util.encoding;

/**
 *
 * @author pp
 */
final class EncoderCP1253 extends SingleByteEncoder implements Encoder {

	// collision-free hash table for CP1253 char-to-byte conversion.
	// unless entry == INVALID_ID, highest 16 bits are used 
	// to verify key match, lowest byte is mapped byte.
	// only maps entries for keys >= 128 (non-ASCII range).
	private static final int[] TABLE = {
		INVALID_ID, INVALID_ID, 0x03ba00ea, INVALID_ID, INVALID_ID, INVALID_ID, 0x03b900e9, INVALID_ID,
		INVALID_ID, INVALID_ID, 0x03bc00ec, INVALID_ID, 0x20130096, INVALID_ID, 0x03bb00eb, INVALID_ID,
		0x20140097, INVALID_ID, 0x03be00ee, INVALID_ID, 0x201500af, INVALID_ID, 0x03bd00ed, INVALID_ID,
		INVALID_ID, 0x03c000f0, INVALID_ID, INVALID_ID, INVALID_ID, INVALID_ID, 0x03bf00ef, INVALID_ID,
		0x20180091, 0x03c200f2, INVALID_ID, INVALID_ID, 0x20190092, 0x03c100f1, INVALID_ID, INVALID_ID,
		0x201a0082, 0x03c400f4, INVALID_ID, 0x038400b4, INVALID_ID, 0x03c300f3, INVALID_ID, INVALID_ID,
		0x201c0093, 0x03c600f6, INVALID_ID, 0x038600a2, 0x201d0094, 0x03c500f5, INVALID_ID, 0x038500a1,
		0x201e0084, 0x03c800f8, INVALID_ID, 0x038800b8, INVALID_ID, 0x03c700f7, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x03ca00fa, INVALID_ID, 0x038a00ba, INVALID_ID, 0x03c900f9, INVALID_ID, 0x038900b9,
		INVALID_ID, 0x03cc00fc, INVALID_ID, 0x038c00bc, INVALID_ID, 0x03cb00fb, INVALID_ID, INVALID_ID,
		INVALID_ID, 0x03ce00fe, INVALID_ID, 0x038e00be, INVALID_ID, 0x03cd00fd, INVALID_ID, 0x01920083,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x039000c0, INVALID_ID, INVALID_ID, INVALID_ID, 0x038f00bf,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x039200c2, INVALID_ID, INVALID_ID, INVALID_ID, 0x039100c1,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x039400c4, INVALID_ID, INVALID_ID, INVALID_ID, 0x039300c3,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x039600c6, INVALID_ID, INVALID_ID, INVALID_ID, 0x039500c5,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x039800c8, INVALID_ID, INVALID_ID, INVALID_ID, 0x039700c7,
		INVALID_ID, 0x20300089, INVALID_ID, 0x039a00ca, 0x00a000a0, INVALID_ID, INVALID_ID, 0x039900c9,
		INVALID_ID, INVALID_ID, INVALID_ID, 0x039c00cc, INVALID_ID, INVALID_ID, INVALID_ID, 0x039b00cb,
		0x00a300a3, INVALID_ID, INVALID_ID, 0x039e00ce, 0x00a400a4, INVALID_ID, INVALID_ID, 0x039d00cd,
		0x00a500a5, INVALID_ID, 0x03a000d0, INVALID_ID, 0x00a600a6, INVALID_ID, INVALID_ID, 0x039f00cf,
		0x00a700a7, INVALID_ID, INVALID_ID, INVALID_ID, 0x00a800a8, 0x2039008b, 0x03a100d1, INVALID_ID,
		0x00a900a9, 0x203a009b, 0x03a400d4, INVALID_ID, INVALID_ID, INVALID_ID, 0x03a300d3, INVALID_ID,
		0x00ab00ab, INVALID_ID, 0x03a600d6, INVALID_ID, 0x00ac00ac, INVALID_ID, 0x03a500d5, INVALID_ID,
		0x00ad00ad, INVALID_ID, 0x03a800d8, INVALID_ID, 0x00ae00ae, INVALID_ID, 0x03a700d7, INVALID_ID,
		INVALID_ID, 0x20200086, 0x03aa00da, INVALID_ID, 0x00b000b0, 0x20210087, 0x03a900d9, INVALID_ID,
		0x00b100b1, 0x20220095, 0x03ac00dc, INVALID_ID, 0x00b200b2, INVALID_ID, 0x03ab00db, INVALID_ID,
		0x00b300b3, INVALID_ID, 0x03ae00de, 0x21220099, INVALID_ID, INVALID_ID, 0x03ad00dd, INVALID_ID,
		0x00b500b5, 0x20260085, 0x03b000e0, INVALID_ID, 0x00b600b6, INVALID_ID, 0x03af00df, INVALID_ID,
		0x00b700b7, INVALID_ID, 0x03b200e2, INVALID_ID, INVALID_ID, INVALID_ID, 0x03b100e1, INVALID_ID,
		INVALID_ID, INVALID_ID, 0x03b400e4, INVALID_ID, INVALID_ID, INVALID_ID, 0x03b300e3, INVALID_ID,
		0x00bb00bb, INVALID_ID, 0x03b600e6, INVALID_ID, 0x20ac0080, INVALID_ID, 0x03b500e5, INVALID_ID,
		0x00bd00bd, INVALID_ID, 0x03b800e8, INVALID_ID, INVALID_ID, INVALID_ID, 0x03b700e7, INVALID_ID
	};

	@Override
	int convert(int c) {
		return TABLE[((((c << 7) + c) >>> 5) ^ (c >>> 7)) & 0xff];
	}

	@Override
	public Encoding encoding() {
		return Encoding.CP1253;
	}
}
